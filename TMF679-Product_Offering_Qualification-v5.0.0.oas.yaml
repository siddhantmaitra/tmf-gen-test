openapi: 3.0.1
info:
  title: Product Offering Qualification
  description: >-
    **TMF API Reference : TMF 679 - Product Offering Qualification** - June 2024


    Product Offering Qualification API provides Product Offering commercial eligibility. This API
    features 2 distinct resources: CheckProductOfferingQualification  and
    QueryProductOfferingQualification 


    **CheckProductOfferingQualification** allows to:

    - Request for a (or a set of)  productOffering and/or Product specification  (with
    configuration) commercial eligibility check. A CheckProductOfferingQualification is made of item
    (One item per product).

    - Provide a validation result for each item

    - Provide, if requested by the client side and if eligibility fails, an alternate
    productOffering and/or productSpecification

    - Provide in the response eligible productOffering if the request provided only product
    specification description.

    - Note: CheckProductOfferingQualification allows describing product from the inventory, so it is
    also possible to use it to retrieve productOffering available for a migration, to complete
    existing asset, or to check terminate operation eligibility.  In order to manage this UC, an
    action has to be provided for each item.


    In a nutshell CheckProductOfferingQualification is for precise question/precise response


    **QueryProductOfferingQualification** allows to

    - look for productOffering eligibles from a context passed by search criteria structure

    - The response will provide a list of item - each item for a productOffering eligible


     In a nutshell QueryProductOfferingQualification is for 'vague 'request and get a list of available productOffering



    **QueryProductOfferingQualification and CheckProductOfferingQualification resources**


     These are 2 separate resources.

    Both resources are following task-based pattern. They both leverage Task status lifecycle to
    monitor progress.

    For both resources the API provided the following operations :

    - Retrieval of a QueryProductOfferingQualification/CheckProductOfferingQualification or a
    collection of QueryProductOfferingQualification/CheckProductOfferingQualification depending on
    filter criteria

    - Partial update of a QueryProductOfferingQualification or CheckProductOfferingQualification
    (including updating rules and for administration purpose)

    - Creation of a QueryProductOfferingQualification or CheckProductOfferingQualification
    (including default values and creation rules and for administration purpose). It should note
    that the API support 200 as 201 response as it is not striclty requested to save
    QueryProductOfferingQualification or CheckProductOfferingQualification. Indeed for instant sync
    qualification (qualification result provided in the respone)  it is possible to not provide  a
    GET operation to retrieve this resource later.

    - Deletion of a QueryProductOfferingQualification or CheckProductOfferingQualification  (for
    administration purposes)

    - Notification of events on QueryProductOfferingQualification and
    CheckProductOfferingQualification .  
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/productOfferingQualification/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: checkProductOfferingQualification
    description: Operations for CheckProductOfferingQualification Resource
  - name: queryProductOfferingQualification
    description: Operations for QueryProductOfferingQualification Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /checkProductOfferingQualification:
    get:
      tags:
        - checkProductOfferingQualification
      summary: List or find CheckProductOfferingQualification objects
      description: List or find CheckProductOfferingQualification objects
      operationId: listCheckProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200CheckProductOfferingQualificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - checkProductOfferingQualification
      summary: Creates a CheckProductOfferingQualification
      description: This operation creates a CheckProductOfferingQualification entity.
      operationId: createCheckProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualification_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200CheckProductOfferingQualification_Task'
        '201':
          $ref: '#/components/responses/201CheckProductOfferingQualification'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/checkProductOfferingQualification/{id}':
    get:
      tags:
        - checkProductOfferingQualification
      summary: Retrieves a CheckProductOfferingQualification by ID
      description: >-
        This operation retrieves a CheckProductOfferingQualification entity. Attribute selection
        enabled for all first level attributes.
      operationId: retrieveCheckProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200CheckProductOfferingQualification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - checkProductOfferingQualification
      summary: Deletes a CheckProductOfferingQualification
      description: This operation deletes a CheckProductOfferingQualification entity.
      operationId: deleteCheckProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - checkProductOfferingQualification
      summary: Updates partially a CheckProductOfferingQualification
      description: This operation updates partially a CheckProductOfferingQualification entity.
      operationId: patchCheckProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200CheckProductOfferingQualification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/checkProductOfferingQualificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckProductOfferingQualificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckProductOfferingQualificationAttributeValueChangeEvent
      operationId: checkProductOfferingQualificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkProductOfferingQualificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckProductOfferingQualificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckProductOfferingQualificationCreateEvent
      operationId: checkProductOfferingQualificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkProductOfferingQualificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckProductOfferingQualificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckProductOfferingQualificationDeleteEvent
      operationId: checkProductOfferingQualificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkProductOfferingQualificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckProductOfferingQualificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckProductOfferingQualificationStateChangeEvent
      operationId: checkProductOfferingQualificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckProductOfferingQualificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryProductOfferingQualificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryProductOfferingQualificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryProductOfferingQualificationAttributeValueChangeEvent
      operationId: queryProductOfferingQualificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryProductOfferingQualificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryProductOfferingQualificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryProductOfferingQualificationCreateEvent
      operationId: queryProductOfferingQualificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryProductOfferingQualificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryProductOfferingQualificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryProductOfferingQualificationDeleteEvent
      operationId: queryProductOfferingQualificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryProductOfferingQualificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryProductOfferingQualificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryProductOfferingQualificationStateChangeEvent
      operationId: queryProductOfferingQualificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /queryProductOfferingQualification:
    get:
      tags:
        - queryProductOfferingQualification
      summary: List or find QueryProductOfferingQualification objects
      description: List or find QueryProductOfferingQualification objects
      operationId: listQueryProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200QueryProductOfferingQualificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - queryProductOfferingQualification
      summary: Creates a QueryProductOfferingQualification
      description: This operation creates a QueryProductOfferingQualification entity.
      operationId: createQueryProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualification_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200QueryProductOfferingQualification_Task'
        '201':
          $ref: '#/components/responses/201QueryProductOfferingQualification'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/queryProductOfferingQualification/{id}':
    get:
      tags:
        - queryProductOfferingQualification
      summary: Retrieves a QueryProductOfferingQualification by ID
      description: >-
        This operation retrieves a QueryProductOfferingQualification entity. Attribute selection
        enabled for all first level attributes.
      operationId: retrieveQueryProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200QueryProductOfferingQualification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - queryProductOfferingQualification
      summary: Deletes a QueryProductOfferingQualification
      description: This operation deletes a QueryProductOfferingQualification entity.
      operationId: deleteQueryProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - queryProductOfferingQualification
      summary: Updates partially a QueryProductOfferingQualification
      description: This operation updates partially a QueryProductOfferingQualification entity.
      operationId: patchQueryProductOfferingQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/QueryProductOfferingQualification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200QueryProductOfferingQualification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    AgreementItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef'
    AgreementItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
          required:
            - agreementId
            - agreementItemId
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_FVO'
    AgreementItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_MVO'
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    AlternateProductOfferingProposal:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Alternate product Offering proposal is used when the requested product offering is not
            available with characteristic and date asked for. An alternate proposal could be a
            distinct product offering or product Spec close to requested one or same as requested
            but with a different activation date.
          properties:
            alternateActivationDate:
              type: string
              format: date-time
              description: >-
                Alternate activation date in case seller is not able to meet requested expected
                activation date.
            alternateProduct:
              $ref: '#/components/schemas/ProductRefOrValue'
            alternateProductOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            promotion:
              $ref: '#/components/schemas/PromotionRef'
            id:
              type: string
              description: Identifier of the AlternateProductOfferingProposal within its containing entity
      discriminator:
        propertyName: '@type'
        mapping:
          AlternateProductOfferingProposal: '#/components/schemas/AlternateProductOfferingProposal'
    AlternateProductOfferingProposal_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Alternate product Offering proposal is used when the requested product offering is not
            available with characteristic and date asked for. An alternate proposal could be a
            distinct product offering or product Spec close to requested one or same as requested
            but with a different activation date.
          properties:
            alternateActivationDate:
              type: string
              format: date-time
              description: >-
                Alternate activation date in case seller is not able to meet requested expected
                activation date.
            alternateProduct:
              $ref: '#/components/schemas/ProductRefOrValue_MVO'
            alternateProductOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            promotion:
              $ref: '#/components/schemas/PromotionRef_MVO'
            id:
              type: string
              description: Identifier of the AlternateProductOfferingProposal within its containing entity
      discriminator:
        propertyName: '@type'
        mapping:
          AlternateProductOfferingProposal: '#/components/schemas/AlternateProductOfferingProposal_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BillingAccountRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef'
    BillingAccountRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_MVO'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    CategoryRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef'
    CategoryRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_MVO'
    ChannelRef:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef'
    ChannelRef_MVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
    CheckProductOfferingQualification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            CheckProductOfferingQualification is used to perform a commercial eligibility. It allows
            to request an eligibility check for a list of productOfferings (one per item). The
            response will provide qualification result depending on catalog rules and of the context
            of the interaction (defined be place, channel, party, product).
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            channel:
              $ref: '#/components/schemas/ChannelRef'
            description:
              type: string
              description: Description of the CheckProductOfferingQualification
            effectiveQualificationDate:
              type: string
              format: date-time
              description: Effective date to CheckProductOfferingQualification completion
            expectedQualificationCompletionDate:
              type: string
              format: date-time
              description: >-
                Expected Date from server side to provide an answer for the check qualification
                request
            expirationDate:
              type: string
              format: date-time
              description: Date the qualification response expires
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note'
            checkProductOfferingQualificationItem:
              type: array
              description: Qualification item for a product or a category
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem'
            provideAlternative:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that alternative solutions should
                be provided
            provideOnlyAvailable:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that only available product
                offering must be listed in the response
            provideResultReason:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that result reason are expected
                for available or not of product offering
            qualificationResult:
              type: string
              description: 'Result of the qualification (example: green, yellow, red)'
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
            state:
              $ref: '#/components/schemas/TaskStateType'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the CheckProductOfferingQualification was created
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualification: '#/components/schemas/CheckProductOfferingQualification'
    CheckProductOfferingQualificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckProductOfferingQualificationAttributeValueChange structure
          properties:
            event:
              $ref: '#/components/schemas/CheckProductOfferingQualificationAttributeValueChangePayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationAttributeValueChangeEvent: '#/components/schemas/CheckProductOfferingQualificationAttributeValueChangeEvent'
    CheckProductOfferingQualificationAttributeValueChangePayload:
      type: object
      description: CheckProductOfferingQualificationAttributeValueChangePayload generic structure
      properties:
        checkProductOfferingQualification:
          $ref: '#/components/schemas/CheckProductOfferingQualification'
    CheckProductOfferingQualificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckProductOfferingQualificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckProductOfferingQualificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationCreateEvent: '#/components/schemas/CheckProductOfferingQualificationCreateEvent'
    CheckProductOfferingQualificationCreateEventPayload:
      type: object
      description: CheckProductOfferingQualificationCreateEventPayload
      properties:
        checkProductOfferingQualification:
          $ref: '#/components/schemas/CheckProductOfferingQualification'
    CheckProductOfferingQualificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckProductOfferingQualificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckProductOfferingQualificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationDeleteEvent: '#/components/schemas/CheckProductOfferingQualificationDeleteEvent'
    CheckProductOfferingQualificationDeleteEventPayload:
      type: object
      description: CheckProductOfferingQualification Delete
      properties:
        checkProductOfferingQualification:
          $ref: '#/components/schemas/CheckProductOfferingQualification'
    CheckProductOfferingQualificationItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            expectedActivationDate:
              type: string
              format: date-time
              description: Date when the requester look for productOfferingQualification activation
            eligibilityResultReason:
              type: array
              description: >-
                Reason for understanding the eligibility result, whatever the result is
                (availability or unavailability).
              items:
                $ref: '#/components/schemas/EligibilityResultReason'
            qualificationItemRelationship:
              type: array
              description: Collecton of qualification item relationships
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship'
            CheckProductOfferingQualificationItem:
              type: array
              description: A structure to embed check qualification item within check qualification item
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem'
            note:
              type: array
              description: 'Collection of free form text associated with the qualification request '
              items:
                $ref: '#/components/schemas/Note'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            category:
              $ref: '#/components/schemas/CategoryRef'
            terminationError:
              type: array
              description: List of termination errors
              items:
                $ref: '#/components/schemas/TerminationError'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            promotion:
              $ref: '#/components/schemas/PromotionRef'
            alternateProductOfferingProposal:
              type: array
              description: Collection of alternate product offerings
              items:
                $ref: '#/components/schemas/AlternateProductOfferingProposal'
            action:
              type: string
              description: >-
                Action to be performed on a ProductOffering or product in order to be qualified(add,
                modify, remove, etc.)
            id:
              type: string
              description: >-
                Identifier of the CheckProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
            qualificationItemResult:
              type: string
              description: >-
                Qualification result for this checkProductOfferingQualification item. It could be
                qualified (request productOffering or productSpecification are available),
                unqualified (requested not available and not alternate available), alternate
                (requested not available but alternate proposal available)
            state:
              type: string
              description: >-
                State of the CheckProductOfferingQualification item : described in the state machine
                diagram
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationItem: '#/components/schemas/CheckProductOfferingQualificationItem'
    CheckProductOfferingQualificationItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            expectedActivationDate:
              type: string
              format: date-time
              description: Date when the requester look for productOfferingQualification activation
            qualificationItemRelationship:
              type: array
              description: Collecton of qualification item relationships
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship_FVO'
            CheckProductOfferingQualificationItem:
              type: array
              description: A structure to embed check qualification item within check qualification item
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem_FVO'
            note:
              type: array
              description: 'Collection of free form text associated with the qualification request '
              items:
                $ref: '#/components/schemas/Note'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_FVO'
            category:
              $ref: '#/components/schemas/CategoryRef'
            terminationError:
              type: array
              description: List of termination errors
              items:
                $ref: '#/components/schemas/TerminationError'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            promotion:
              $ref: '#/components/schemas/PromotionRef'
            action:
              type: string
              description: >-
                Action to be performed on a ProductOffering or product in order to be qualified(add,
                modify, remove, etc.)
            id:
              type: string
              description: >-
                Identifier of the CheckProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationItem: '#/components/schemas/CheckProductOfferingQualificationItem_FVO'
    CheckProductOfferingQualificationItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            expectedActivationDate:
              type: string
              format: date-time
              description: Date when the requester look for productOfferingQualification activation
            eligibilityResultReason:
              type: array
              description: >-
                Reason for understanding the eligibility result, whatever the result is
                (availability or unavailability).
              items:
                $ref: '#/components/schemas/EligibilityResultReason_MVO'
            qualificationItemRelationship:
              type: array
              description: Collecton of qualification item relationships
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship_MVO'
            CheckProductOfferingQualificationItem:
              type: array
              description: A structure to embed check qualification item within check qualification item
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem_MVO'
            note:
              type: array
              description: 'Collection of free form text associated with the qualification request '
              items:
                $ref: '#/components/schemas/Note_MVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_MVO'
            category:
              $ref: '#/components/schemas/CategoryRef_MVO'
            terminationError:
              type: array
              description: List of termination errors
              items:
                $ref: '#/components/schemas/TerminationError_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            promotion:
              $ref: '#/components/schemas/PromotionRef_MVO'
            alternateProductOfferingProposal:
              type: array
              description: Collection of alternate product offerings
              items:
                $ref: '#/components/schemas/AlternateProductOfferingProposal_MVO'
            action:
              type: string
              description: >-
                Action to be performed on a ProductOffering or product in order to be qualified(add,
                modify, remove, etc.)
            id:
              type: string
              description: >-
                Identifier of the CheckProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
            qualificationItemResult:
              type: string
              description: >-
                Qualification result for this checkProductOfferingQualification item. It could be
                qualified (request productOffering or productSpecification are available),
                unqualified (requested not available and not alternate available), alternate
                (requested not available but alternate proposal available)
            state:
              type: string
              description: >-
                State of the CheckProductOfferingQualification item : described in the state machine
                diagram
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationItem: '#/components/schemas/CheckProductOfferingQualificationItem_MVO'
    CheckProductOfferingQualificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckProductOfferingQualificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckProductOfferingQualificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualificationStateChangeEvent: '#/components/schemas/CheckProductOfferingQualificationStateChangeEvent'
    CheckProductOfferingQualificationStateChangeEventPayload:
      type: object
      description: CheckProductOfferingQualificationStateChangeEventPayload generic structure
      properties:
        checkProductOfferingQualification:
          $ref: '#/components/schemas/CheckProductOfferingQualification'
    CheckProductOfferingQualification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            CheckProductOfferingQualification is used to perform a commercial eligibility. It allows
            to request an eligibility check for a list of productOfferings (one per item). The
            response will provide qualification result depending on catalog rules and of the context
            of the interaction (defined be place, channel, party, product).
          properties:
            channel:
              $ref: '#/components/schemas/ChannelRef'
            description:
              type: string
              description: Description of the CheckProductOfferingQualification
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note'
            checkProductOfferingQualificationItem:
              type: array
              description: Qualification item for a product or a category
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem_FVO'
            provideAlternative:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that alternative solutions should
                be provided
            provideOnlyAvailable:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that only available product
                offering must be listed in the response
            provideResultReason:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that result reason are expected
                for available or not of product offering
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualification: '#/components/schemas/CheckProductOfferingQualification_FVO'
    CheckProductOfferingQualification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            CheckProductOfferingQualification is used to perform a commercial eligibility. It allows
            to request an eligibility check for a list of productOfferings (one per item). The
            response will provide qualification result depending on catalog rules and of the context
            of the interaction (defined be place, channel, party, product).
          properties:
            channel:
              $ref: '#/components/schemas/ChannelRef_MVO'
            description:
              type: string
              description: Description of the CheckProductOfferingQualification
            effectiveQualificationDate:
              type: string
              format: date-time
              description: Effective date to CheckProductOfferingQualification completion
            expectedQualificationCompletionDate:
              type: string
              format: date-time
              description: >-
                Expected Date from server side to provide an answer for the check qualification
                request
            expirationDate:
              type: string
              format: date-time
              description: Date the qualification response expires
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note_MVO'
            checkProductOfferingQualificationItem:
              type: array
              description: Qualification item for a product or a category
              items:
                $ref: '#/components/schemas/CheckProductOfferingQualificationItem_MVO'
            provideAlternative:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that alternative solutions should
                be provided
            provideOnlyAvailable:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that only available product
                offering must be listed in the response
            provideResultReason:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that result reason are expected
                for available or not of product offering
            qualificationResult:
              type: string
              description: 'Result of the qualification (example: green, yellow, red)'
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
            state:
              $ref: '#/components/schemas/TaskStateType'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckProductOfferingQualification: '#/components/schemas/CheckProductOfferingQualification_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Duration:
      type: object
      description: A time interval in a given unit of time
      properties:
        amount:
          type: integer
          description: 'Time interval (number of seconds, minutes, hours, etc.)'
        units:
          type: string
          description: 'Unit of time (seconds, minutes, hours, etc.)'
    EligibilityResultReason:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reason for understanding the eligibility result, whatever the result is (availability or
            unavailability).
          properties:
            label:
              type: string
              description: human readable result reason label
            code:
              type: string
              description: Result reason code.
      discriminator:
        propertyName: '@type'
        mapping:
          EligibilityResultReason: '#/components/schemas/EligibilityResultReason'
    EligibilityResultReason_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reason for understanding the eligibility result, whatever the result is (availability or
            unavailability).
          properties:
            label:
              type: string
              description: human readable result reason label
            code:
              type: string
              description: Result reason code.
      discriminator:
        propertyName: '@type'
        mapping:
          EligibilityResultReason: '#/components/schemas/EligibilityResultReason_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRelationship:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_FVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      required:
        - relationshipType
        - id
        - '@referredType'
        - '@type'
    EntityRelationship_MVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_MVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddressRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship'
    GeographicAddressRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_FVO'
    GeographicAddressRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_MVO'
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_FVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_FVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_MVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_MVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature'
    GeographicSiteFeature:
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteFeature_FVO:
      allOf:
        - $ref: '#/components/schemas/Feature_FVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteFeature_MVO:
      allOf:
        - $ref: '#/components/schemas/Feature_MVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicSiteRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicSiteRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicSiteRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
    IntentExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRefOrValue_FVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent_FVO'
    IntentRefOrValue_MVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_FVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_MVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    ItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the entity managed by the item
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    LineString:
      type: object
      description: 'GeoJSON: A collection of Points forming a connected line'
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: >-
            A signed floating point number, the meaning of the sign is according to the context of
            the API that uses this Data type
    MultiLineString:
      type: object
      description: 'GeoJSON: A collection of distinct LineStrings'
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    MultiPoint:
      type: object
      description: 'GeoJSON: A collection of Points'
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/positionArray'
    MultiPolygon:
      type: object
      description: 'GeoJSON: A collection of Polygons'
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          $ref: '#/components/schemas/multiPolygon'
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    Place:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    Point:
      type: object
      description: 'GeoJSON: A single position'
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/position'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Polygon:
      type: object
      description: 'GeoJSON: An array of linear rings'
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/polygon'
    Price:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price'
    PriceAlteration:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration'
    PriceAlteration_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_FVO'
    PriceAlteration_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_MVO'
    Price_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price_MVO'
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Product:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
    ProductOfferingPriceRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef'
    ProductOfferingPriceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_MVO'
    ProductOfferingQualificationItemRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Structure used to describe relationship between productOfferingQualification item from
            the same ProductOfferingQualification.
          properties:
            id:
              type: string
              description: Id of the related POQ item (must be in the same POQ)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRelationship: '#/components/schemas/ProductOfferingQualificationItemRelationship'
    ProductOfferingQualificationItemRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Structure used to describe relationship between productOfferingQualification item from
            the same ProductOfferingQualification.
          properties:
            id:
              type: string
              description: Id of the related POQ item (must be in the same POQ)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRelationship: '#/components/schemas/ProductOfferingQualificationItemRelationship_FVO'
    ProductOfferingQualificationItemRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Structure used to describe relationship between productOfferingQualification item from
            the same ProductOfferingQualification.
          properties:
            id:
              type: string
              description: Id of the related POQ item (must be in the same POQ)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRelationship: '#/components/schemas/ProductOfferingQualificationItemRelationship_MVO'
    ProductOfferingRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef'
    ProductOfferingRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_MVO'
    ProductPrice:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice'
    ProductPrice_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_FVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_FVO'
    ProductPrice_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_MVO'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_MVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_MVO'
    ProductRef:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product'
        - $ref: '#/components/schemas/ProductRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_FVO'
        - $ref: '#/components/schemas/ProductRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_MVO'
        - $ref: '#/components/schemas/ProductRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRef_MVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship'
    ProductRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_FVO'
    ProductRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_MVO'
    ProductSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef'
    ProductSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_FVO'
    ProductSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_MVO'
    ProductStatusType:
      enum:
        - created
        - pendingActive
        - cancelled
        - active
        - pendingTerminate
        - terminated
        - suspended
        - 'aborted '
      type: string
      description: Possible values for the status of the product
    ProductTerm:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm'
    ProductTerm_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm_MVO'
    Product_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_FVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_FVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_FVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_FVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_FVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_FVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
    Product_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_MVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_MVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_MVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_MVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_MVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_MVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm_MVO'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
    PromotionRef:
      type: object
      description: >-
        Promotion reference. Promotion Resource is used to provide the additional discount, voucher,
        bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the
        enterprise is able to attract the users and encourage more consumption, especially
        continuous purchases.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PromotionRef: '#/components/schemas/PromotionRef'
    PromotionRef_MVO:
      type: object
      description: >-
        Promotion reference. Promotion Resource is used to provide the additional discount, voucher,
        bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the
        enterprise is able to attract the users and encourage more consumption, especially
        continuous purchases.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PromotionRef: '#/components/schemas/PromotionRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    QueryProductOfferingQualification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            QueryProductOfferingQualification is used to perform a commercial eligibility. It allows
            client side to pass a list of criteria (search criteria to provide the context of the
            qualification) and in the response the seller send (if any) a list of product offering
            qualified.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            channel:
              $ref: '#/components/schemas/ChannelRef'
            description:
              type: string
              description: Description of the QueryProductOfferingQualification
            effectiveQualificationDate:
              type: string
              format: date-time
              description: Effective date to QueryProductOfferingQualification completion
            expectedQualificationCompletionDate:
              type: string
              format: date-time
              description: >-
                Expected date rom the server to provide an answer for the query qualification
                request
            expirationDate:
              type: string
              format: date-time
              description: Date the qualification response expires
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note'
            qualifiedProductOfferingItem:
              type: array
              description: Qualification item for a product or a category
              items:
                $ref: '#/components/schemas/QueryProductOfferingQualificationItem'
            searchCriteria:
              type: object
              $ref: '#/components/schemas/QueryProductOfferingQualificationItem'
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
            state:
              $ref: '#/components/schemas/TaskStateType'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the QueryProductOfferingQualification was created
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualification: '#/components/schemas/QueryProductOfferingQualification'
    QueryProductOfferingQualificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryProductOfferingQualificationAttributeValueChange structure
          properties:
            event:
              $ref: '#/components/schemas/QueryProductOfferingQualificationAttributeValueChangePayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationAttributeValueChangeEvent: '#/components/schemas/QueryProductOfferingQualificationAttributeValueChangeEvent'
    QueryProductOfferingQualificationAttributeValueChangePayload:
      type: object
      description: QueryProductOfferingQualificationAttributeValueChangePayload generic structure
      properties:
        queryProductOfferingQualification:
          $ref: '#/components/schemas/QueryProductOfferingQualification'
    QueryProductOfferingQualificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryProductOfferingQualificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryProductOfferingQualificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationCreateEvent: '#/components/schemas/QueryProductOfferingQualificationCreateEvent'
    QueryProductOfferingQualificationCreateEventPayload:
      type: object
      description: QueryProductOfferingQualificationCreateEventPayload
      properties:
        queryProductOfferingQualification:
          $ref: '#/components/schemas/QueryProductOfferingQualification'
    QueryProductOfferingQualificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryProductOfferingQualificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryProductOfferingQualificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationDeleteEvent: '#/components/schemas/QueryProductOfferingQualificationDeleteEvent'
    QueryProductOfferingQualificationDeleteEventPayload:
      type: object
      description: QueryProductOfferingQualification Delete event
      properties:
        queryProductOfferingQualification:
          $ref: '#/components/schemas/QueryProductOfferingQualification'
    QueryProductOfferingQualificationItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            qualificationItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            category:
              $ref: '#/components/schemas/CategoryRef'
            promotion:
              $ref: '#/components/schemas/PromotionRef'
            id:
              type: string
              description: >-
                Identifier of the ProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationItem: '#/components/schemas/QueryProductOfferingQualificationItem'
    QueryProductOfferingQualificationItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            qualificationItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship_FVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            category:
              $ref: '#/components/schemas/CategoryRef'
            promotion:
              $ref: '#/components/schemas/PromotionRef'
            id:
              type: string
              description: >-
                Identifier of the ProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationItem: '#/components/schemas/QueryProductOfferingQualificationItem_FVO'
    QueryProductOfferingQualificationItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            qualificationItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationItemRelationship_MVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            category:
              $ref: '#/components/schemas/CategoryRef_MVO'
            promotion:
              $ref: '#/components/schemas/PromotionRef_MVO'
            id:
              type: string
              description: >-
                Identifier of the ProductOfferingQualification item (generally it is a sequence
                number 01, 02, 03, ...)
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationItem: '#/components/schemas/QueryProductOfferingQualificationItem_MVO'
    QueryProductOfferingQualificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryProductOfferingQualificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryProductOfferingQualificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualificationStateChangeEvent: '#/components/schemas/QueryProductOfferingQualificationStateChangeEvent'
    QueryProductOfferingQualificationStateChangeEventPayload:
      type: object
      description: QueryProductOfferingQualificationStateChangeEventPayload generic structure
      properties:
        queryProductOfferingQualification:
          $ref: '#/components/schemas/QueryProductOfferingQualification'
    QueryProductOfferingQualification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            QueryProductOfferingQualification is used to perform a commercial eligibility. It allows
            client side to pass a list of criteria (search criteria to provide the context of the
            qualification) and in the response the seller send (if any) a list of product offering
            qualified.
          properties:
            channel:
              $ref: '#/components/schemas/ChannelRef'
            description:
              type: string
              description: Description of the QueryProductOfferingQualification
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note'
            searchCriteria:
              type: object
              $ref: '#/components/schemas/QueryProductOfferingQualificationItem_FVO'
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualification: '#/components/schemas/QueryProductOfferingQualification_FVO'
    QueryProductOfferingQualification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            QueryProductOfferingQualification is used to perform a commercial eligibility. It allows
            client side to pass a list of criteria (search criteria to provide the context of the
            qualification) and in the response the seller send (if any) a list of product offering
            qualified.
          properties:
            channel:
              $ref: '#/components/schemas/ChannelRef_MVO'
            description:
              type: string
              description: Description of the QueryProductOfferingQualification
            effectiveQualificationDate:
              type: string
              format: date-time
              description: Effective date to QueryProductOfferingQualification completion
            expectedQualificationCompletionDate:
              type: string
              format: date-time
              description: >-
                Expected date rom the server to provide an answer for the query qualification
                request
            expirationDate:
              type: string
              format: date-time
              description: Date the qualification response expires
            instantSyncQualification:
              type: boolean
              description: >-
                A previous indicator which when the value is "true" means that requester expects to
                get qualifcation result immedi3ately in the response. If the indicator is true (or
                by default now without it) then the response code of 200 indicates the operation is
                successful otherwise a task is created with a response 201. For asynchronous, this
                attribute is now replaced by the header request "Expect: 202-Accepted"
              deprecated: true
            note:
              type: array
              description: Free form text associated with the qualification request
              items:
                $ref: '#/components/schemas/Note_MVO'
            qualifiedProductOfferingItem:
              type: array
              description: Qualification item for a product or a category
              items:
                $ref: '#/components/schemas/QueryProductOfferingQualificationItem_MVO'
            searchCriteria:
              type: object
              $ref: '#/components/schemas/QueryProductOfferingQualificationItem_MVO'
            relatedParty:
              type: array
              description: Party playing a role for this qualification (as requester for example)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            requestedQualificationCompletionDate:
              type: string
              format: date-time
              description: Deadline date when the requester expected a qualification answer
            state:
              $ref: '#/components/schemas/TaskStateType'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryProductOfferingQualification: '#/components/schemas/QueryProductOfferingQualification_MVO'
    RelatedOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem'
    RelatedOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
          required:
            - role
            - orderId
            - orderItemId
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_FVO'
    RelatedOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_MVO'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TargetProductSchema:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TargetProductSchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
      required:
        - '@type'
        - '@schemaLocation'
    TargetProductSchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TaskStateType:
      enum:
        - acknowledged
        - rejected
        - inProgress
        - cancelled
        - done
        - terminatedWithError
      type: string
      description: Possible values for the state of a task
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TerminationError:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Unique identifier of the termination error
            value:
              type: string
              description: >-
                Text to describe the termination error - for example: Unable to proceed to
                qualification because incomplete information provided
      discriminator:
        propertyName: '@type'
        mapping:
          TerminationError: '#/components/schemas/TerminationError'
    TerminationError_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Unique identifier of the termination error
            value:
              type: string
              description: >-
                Text to describe the termination error - for example: Unable to proceed to
                qualification because incomplete information provided
      discriminator:
        propertyName: '@type'
        mapping:
          TerminationError: '#/components/schemas/TerminationError_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    bbox:
      items:
        type: number
      minItems: 4
      type: array
      description: >-
        A bounding box array that contains the geometry. The axes order follows the axes order of
        the geometry
    lineString:
      items:
        $ref: '#/components/schemas/position'
      minItems: 2
      type: array
      description: 'GeoJSON: An array of two or more positions'
    linearRing:
      items:
        $ref: '#/components/schemas/position'
      minItems: 4
      type: array
      description: 'GeoJSON: An array of four or more positions where the first equals the last'
    multiLineString:
      items:
        $ref: '#/components/schemas/lineString'
      minItems: 1
      type: array
      description: 'GeoJSON: One or more lines'
    multiPolygon:
      items:
        $ref: '#/components/schemas/polygon'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of polygons'
    polygon:
      items:
        $ref: '#/components/schemas/linearRing'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of linear rings'
    position:
      items:
        type: number
      minItems: 2
      type: array
      description: 'GeoJSON: A single position'
    positionArray:
      items:
        $ref: '#/components/schemas/position'
      type: array
      description: 'GeoJSON: An array of positions'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    CheckProductOfferingQualification_FVO:
      description: The CheckProductOfferingQualification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification_FVO'
          examples:
            CreateCheckProductOfferingQualification:
              $ref: '#/components/examples/CreateCheckProductOfferingQualification_request'
      required: true
    CheckProductOfferingQualification_MVO:
      description: The CheckProductOfferingQualification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification_MVO'
          examples:
            CPOQ_partialupdate_example_application_json:
              $ref: '#/components/examples/CPOQ_partialupdate_example_application_json_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification_MVO'
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json_request
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_json_patch_json_request
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json_request
      required: true
    CheckProductOfferingQualificationCreateEvent:
      description: CheckProductOfferingQualification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualificationCreateEvent'
          examples:
            CheckProductOfferingQualificationCreateEvent:
              $ref: '#/components/examples/CheckProductOfferingQualificationCreateEvent_request'
      required: true
    CheckProductOfferingQualificationStateChangeEvent:
      description: CheckProductOfferingQualification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualificationStateChangeEvent'
          examples:
            CheckProductOfferingQualificationStateChangeEvent:
              $ref: '#/components/examples/CheckProductOfferingQualificationStateChangeEvent_request'
      required: true
    CheckProductOfferingQualificationAttributeValueChangeEvent:
      description: CheckProductOfferingQualification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualificationAttributeValueChangeEvent'
          examples:
            CheckProductOfferingQualificationAttributeValueChangeEvent:
              $ref: >-
                #/components/examples/CheckProductOfferingQualificationAttributeValueChangeEvent_request
      required: true
    CheckProductOfferingQualificationDeleteEvent:
      description: CheckProductOfferingQualification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualificationDeleteEvent'
          examples:
            CheckProductOfferingQualificationDeleteEvent:
              $ref: '#/components/examples/CheckProductOfferingQualificationDeleteEvent_request'
      required: true
    QueryProductOfferingQualification_FVO:
      description: The QueryProductOfferingQualification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification_FVO'
          examples:
            CreateQueryProductOfferingQualification:
              $ref: '#/components/examples/CreateQueryProductOfferingQualification_request'
      required: true
    QueryProductOfferingQualification_MVO:
      description: The QueryProductOfferingQualification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification_MVO'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_request
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification_MVO'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json_request
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_patch_json_request
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json_request
      required: true
    QueryProductOfferingQualificationCreateEvent:
      description: QueryProductOfferingQualification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualificationCreateEvent'
          examples:
            QueryProductOfferingQualificationCreateEvent:
              $ref: '#/components/examples/QueryProductOfferingQualificationCreateEvent_request'
      required: true
    QueryProductOfferingQualificationAttributeValueChangeEvent:
      description: QueryProductOfferingQualification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualificationAttributeValueChangeEvent'
          examples:
            QueryProductOfferingQualificationAttributeValueChangeEvent:
              $ref: >-
                #/components/examples/QueryProductOfferingQualificationAttributeValueChangeEvent_request
      required: true
    QueryProductOfferingQualificationStateChangeEvent:
      description: QueryProductOfferingQualification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualificationStateChangeEvent'
          examples:
            QueryProductOfferingQualificationStateChangeEvent:
              $ref: '#/components/examples/QueryProductOfferingQualificationStateChangeEvent_request'
      required: true
    QueryProductOfferingQualificationDeleteEvent:
      description: QueryProductOfferingQualification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualificationDeleteEvent'
          examples:
            QueryProductOfferingQualificationDeleteEvent:
              $ref: '#/components/examples/QueryProductOfferingQualificationDeleteEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200CheckProductOfferingQualification_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification'
    200CheckProductOfferingQualificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CheckProductOfferingQualification'
          examples:
            RetrieveCPOQByList:
              $ref: '#/components/examples/RetrieveCPOQByList_response'
            RetrieveCPOQByListwithFieldsSelection:
              $ref: '#/components/examples/RetrieveCPOQByListwithFieldsSelection_response'
    200CheckProductOfferingQualification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification'
          examples:
            retrieveCPOQById1:
              $ref: '#/components/examples/retrieveCPOQById1_response'
            retrieveCPOQById2:
              $ref: '#/components/examples/retrieveCPOQById2_response'
    200CheckProductOfferingQualification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification'
          examples:
            CPOQ_partialupdate_example_application_json:
              $ref: '#/components/examples/CPOQ_partialupdate_example_application_json_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification'
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json_response
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CheckProductOfferingQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/CheckProductOfferingQualification'
              - type: string
                nullable: true
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_json_patch_json_response
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CheckProductOfferingQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/CheckProductOfferingQualification'
              - type: string
                nullable: true
          examples:
            CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json_response
    201CheckProductOfferingQualification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckProductOfferingQualification'
          examples:
            CreateCheckProductOfferingQualification:
              $ref: '#/components/examples/CreateCheckProductOfferingQualification_response'
    200QueryProductOfferingQualification_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification'
    200QueryProductOfferingQualificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QueryProductOfferingQualification'
          examples:
            RetrieveQPOQByList:
              $ref: '#/components/examples/RetrieveQPOQByList_response'
            RetrieveQPOQByListwithFieldsSelection:
              $ref: '#/components/examples/RetrieveQPOQByListwithFieldsSelection_response'
    200QueryProductOfferingQualification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification'
          examples:
            retrieveQPOCById1:
              $ref: '#/components/examples/retrieveQPOCById1_response'
            retrieveQPOCById2:
              $ref: '#/components/examples/retrieveQPOCById2_response'
    200QueryProductOfferingQualification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_response
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification'
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json_response
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/QueryProductOfferingQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/QueryProductOfferingQualification'
              - type: string
                nullable: true
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_patch_json_response
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/QueryProductOfferingQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/QueryProductOfferingQualification'
              - type: string
                nullable: true
          examples:
            QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json_response
    201QueryProductOfferingQualification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryProductOfferingQualification'
          examples:
            CreateQueryProductOfferingQualification:
              $ref: '#/components/examples/CreateQueryProductOfferingQualification_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    retrieveCPOQById1_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/99'
        id: '99'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for a CheckProductOfferingQualification resource
        effectiveQualificationDate: '2021-09-01T14:21:03.352Z'
        expectedQualificationCompletionDate: '2021-09-01T14:21:03.352Z'
        expirationDate: '2021-09-01T14:21:03.352Z'
        note:
          - '@type': Note
            author: Mr. N. Bene
            date: '2020-11-20T08:00:00Z'
            id: '1'
            text: Not for a CheckProductOfferingQualification
        checkProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            productOffering:
              id: DPI123
              name: International Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            action: add
            id: '1'
            qualificationItemResult: green
            state: done
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            eligibilityResultReason:
              - '@type': EligibilityResultReason
                label: This offering is not anymore available but similar offer exists
                code: TE45A
            productOffering:
              id: DPI123
              name: International Data Plan - 40 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            alternateProductOfferingProposal:
              - '@type': AlternateProductOfferingProposal
                alternateActivationDate: '2021-09-01T14:21:03.353Z'
                alternateProductOffering:
                  id: DPI124
                  name: International Data Plan - 50 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                  '@type': ProductOfferingRef
                id: '1'
            action: add
            id: '2'
            qualificationItemResult: orange
            state: done
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            eligibilityResultReason:
              - '@type': EligibilityResultReason
                label: This offering is not anymore open to new customer
                code: TE45
            productOffering:
              id: DPI128
              name: France Voice Plan - 3 hours
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI128'
              '@type': ProductOfferingRef
            action: add
            id: '3'
            qualificationItemResult: red
            state: done
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-01T14:21:03.354Z'
        state: done
        creationDate: '2021-09-01T14:21:03.354Z'
      description: CheckProductOfferingQualification representation.
    retrieveCPOQById2_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: CheckProductOfferingQualification representation.
    RetrieveCPOQByList_response:
      value:
        - href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/99'
          id: '99'
          '@type': CheckProductOfferingQualification
          channel:
            id: '1'
            name: Web
            '@type': ChannelRef
          description: Example for a CheckProductOfferingQualification resource
          effectiveQualificationDate: '2021-09-01T14:21:03.352Z'
          expectedQualificationCompletionDate: '2021-09-01T14:21:03.352Z'
          expirationDate: '2021-09-01T14:21:03.352Z'
          note:
            - '@type': Note
              author: Mr. N. Bene
              date: '2020-11-20T08:00:00Z'
              id: '1'
              text: Not for a CheckProductOfferingQualification
          checkProductOfferingQualificationItem:
            - '@type': CheckProductOfferingQualificationItem
              expectedActivationDate: '2021-09-01T14:21:03.352Z'
              productOffering:
                id: DPI123
                name: International Data Plan - 20 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                '@type': ProductOfferingRef
              action: add
              id: '1'
              qualificationItemResult: green
              state: done
            - '@type': CheckProductOfferingQualificationItem
              expectedActivationDate: '2021-09-01T14:21:03.352Z'
              eligibilityResultReason:
                - '@type': EligibilityResultReason
                  label: This offering is not anymore available but similar offer exists
                  code: TE45A
              productOffering:
                id: DPI123
                name: International Data Plan - 40 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                '@type': ProductOfferingRef
              alternateProductOfferingProposal:
                - '@type': AlternateProductOfferingProposal
                  alternateActivationDate: '2021-09-01T14:21:03.353Z'
                  alternateProductOffering:
                    id: DPI124
                    name: International Data Plan - 50 GB
                    href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                    '@type': ProductOfferingRef
                  id: '1'
              action: add
              id: '2'
              qualificationItemResult: orange
              state: done
            - '@type': CheckProductOfferingQualificationItem
              expectedActivationDate: '2021-09-01T14:21:03.352Z'
              eligibilityResultReason:
                - '@type': EligibilityResultReason
                  label: This offering is not anymore open to new customer
                  code: TE45
              productOffering:
                id: DPI128
                name: France Voice Plan - 3 hours
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI128'
                '@type': ProductOfferingRef
              action: add
              id: '3'
              qualificationItemResult: red
              state: done
          provideAlternative: true
          provideResultReason: true
          relatedParty:
            - role: requester
              partyOrPartyRole:
                id: 45hj-999
                href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                name: Louise
                '@type': PartyRef
                '@referredType': Individual
              '@type': RelatedPartyOrPartyRole
          requestedQualificationCompletionDate: '2021-09-01T14:21:03.354Z'
          state: done
          creationDate: '2021-09-01T14:21:03.354Z'
        - href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
          id: '101'
          '@type': CheckProductOfferingQualification
          channel:
            id: '1'
            name: Web
            '@type': ChannelRef
          description: Example for an acknowledged CheckProductOfferingQualification resource
          expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
          CheckProductOfferingQualificationItem:
            - '@type': CheckProductOfferingQualificationItem
              expectedActivationDate: '2021-09-02T07:11:53.167Z'
              product:
                '@type': Product
                productSpecification:
                  id: '77'
                  href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                  name: NEST for enhanced MobileBroadband with IMS support
                productCharacteristic:
                  - '@type': ObjectCharacteristic
                    id: Slice5G_Characteristic
                    name: Slice 5G POQ configuration
                    valueType: Slice5G JSON descriptor
                    value:
                      '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                      '@type': 5GSliceJsonSpecification
                      availability: 99.999
                      MMTel_Support: 1
                      Session _Service_Continuity_support: 1
                      Slice_Quality_Of_Service:
                        - 1
                        - 2
                        - 5
                        - 6
                        - 7
                        - 8
                        - 9
                place:
                  - role: Coverage
                    place:
                      id: FRA
                      href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                      name: France
                      '@referredType': GeographicLocation
                      '@type': PlaceRef
                    '@type': RelatedPlaceRefOrValue
              action: add
              id: '1'
              state: acknowledged
          provideAlternative: true
          provideResultReason: true
          relatedParty:
            - role: requester
              partyOrPartyRole:
                id: 45hj-999
                href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                name: Louise
                '@type': PartyRef
                '@referredType': Individual
              '@type': RelatedPartyOrPartyRole
          requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
          state: acknowledged
          creationDate: '2021-09-02T07:11:53.168Z'
      description: A collection of CheckProductOfferingQualification representation
    RetrieveCPOQByListwithFieldsSelection_response:
      value:
        - id: '9'
          href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/9'
          state: done
          expirationDate: '2021-09-03T11:33:54.172Z'
          qualificationResult: green
          '@type': CheckProductOfferingQualification
        - id: '19'
          href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/19'
          state: done
          expirationDate: '2021-09-03T14:25:54.172Z'
          qualificationResult: red
          '@type': CheckProductOfferingQualification
        - id: '31'
          href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/31'
          state: done
          expirationDate: '2021-09-02T15:25:54.172Z'
          qualificationResult: green
          '@type': CheckProductOfferingQualification
        - id: '547'
          href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/547'
          state: done
          expirationDate: '2021-09-03T15:25:54.172Z'
          qualificationResult: green
          '@type': CheckProductOfferingQualification
      description: A collection of CheckProductOfferingQualification with fields selection
    retrieveQPOCById1_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/11'
        id: '11'
        '@type': QueryProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        category:
          id: '24'
          name: International Data plan
          href: 'https://host:port/productCatalogManagement/v5/category/24'
          '@type': CategoryRef
        description: Example for a QueryProductOfferingQualification resource
        effectiveQualificationDate: '2021-08-31T15:25:54.172Z'
        expectedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
        expirationDate: '2021-09-03T15:25:54.172Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI89
              name: European Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI89'
              '@type': ProductOfferingRef
            id: '1'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI90
              name: European Data Plan - 50 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI90'
              '@type': ProductOfferingRef
            id: '2'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI91
              name: European Data Plan - 100 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI91'
              '@type': ProductOfferingRef
            id: '3'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI123
              name: International Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            id: '4'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI124
              name: International Data Plan - 50 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
              '@type': ProductOfferingRef
            id: '5'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI125
              name: International Data Plan - 100 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI125'
              '@type': ProductOfferingRef
            id: '6'
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
        state: done
        creationDate: '2021-08-31T15:25:54.172Z'
      description: QueryProductOfferingQualification representation.
    retrieveQPOCById2_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
        id: '14'
        '@type': QueryProductOfferingQualification
        description: Example for an inProgress QueryProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            id: '1'
            product:
              '@type': Product
              productSpecification:
                id: dfg-56d
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/dfg-56d'
                version: v2
                name: UNI specification
                '@type': ProductSpecificationRef
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: UNI_Characteristic
                  name: UNI order configuration
                  valueType: object
                  value:
                    '@valueSchemaLocation': 'https://github.com/..UNISpec.json'
                    '@type': UNIJsonSpecification
                    physicalLayer: 10BASE-T
                    synchronousModeEnabled: true
                    numberOfLinks: 1
                    tokenShareEnabled: true
                    uniResiliency: NONE
                    maxServiceFrameSize: 1256
              place:
                - role: INSTALL_LOCATION
                  place:
                    streetType: rue
                    streetName: Pellisier
                    streetNr: '14'
                    city: Paris
                    postcode: '75004'
                    country: France
                    '@type': GeographicAddress
                  '@type': RelatedPlaceRefOrValue
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        state: inProgress
        creationDate: '2021-08-31T15:51:12.570Z'
      description: QueryProductOfferingQualification representation.
    RetrieveQPOQByList_response:
      value:
        - href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/11'
          id: '11'
          '@type': QueryProductOfferingQualification
          channel:
            id: '1'
            name: Web
            '@type': ChannelRef
          category:
            id: '24'
            name: International Data plan
            href: 'https://host:port/productCatalogManagement/v5/category/24'
            '@type': CategoryRef
          description: Example for a QueryProductOfferingQualification resource
          effectiveQualificationDate: '2021-08-31T15:25:54.172Z'
          expectedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
          expirationDate: '2021-09-03T15:25:54.172Z'
          qualifiedProductOfferingItem:
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI89
                name: European Data Plan - 20 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI89'
                '@type': ProductOfferingRef
              id: '1'
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI90
                name: European Data Plan - 50 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI90'
                '@type': ProductOfferingRef
              id: '2'
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI91
                name: European Data Plan - 100 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI91'
                '@type': ProductOfferingRef
              id: '3'
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI123
                name: International Data Plan - 20 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                '@type': ProductOfferingRef
              id: '4'
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI124
                name: International Data Plan - 50 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                '@type': ProductOfferingRef
              id: '5'
            - '@type': QueryProductOfferingQualificationItem
              productOffering:
                id: DPI125
                name: International Data Plan - 100 GB
                href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI125'
                '@type': ProductOfferingRef
              id: '6'
          relatedParty:
            - role: requester
              partyOrPartyRole:
                id: 45hj-999
                href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                name: Louise
                '@type': PartyRef
                '@referredType': Individual
              '@type': RelatedPartyOrPartyRole
          requestedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
          state: done
          creationDate: '2021-08-31T15:25:54.172Z'
        - href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
          id: '14'
          '@type': QueryProductOfferingQualification
          description: Example for an inProgress QueryProductOfferingQualification resource
          expectedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
          qualifiedProductOfferingItem:
            - '@type': QueryProductOfferingQualificationItem
              product:
                id: '1'
                '@type': Product
                productSpecification:
                  id: dfg-56d
                  href: 'https://host:port/productCatalogManagement/v5/productSpecification/dfg-56d'
                  version: v2
                  name: UNI specification
                  '@type': ProductSpecificationRef
                productCharacteristic:
                  - '@type': ObjectCharacteristic
                    id: UNI_Characteristic
                    name: UNI order configuration
                    valueType: UNISpec JSON descriptor
                    value:
                      '@valueSchemaLocation': 'https://github.com/..UNISpec.json'
                      '@type': UNIJsonSpecification
                      physicalLayer: 10BASE-T
                      synchronousModeEnabled: true
                      numberOfLinks: 1
                      tokenShareEnabled: true
                      uniResiliency: NONE
                      maxServiceFrameSize: 1256
                place:
                  - role: INSTALL_LOCATION
                    place:
                      streetType: rue
                      streetName: Pellisier
                      streetNr: '14'
                      city: Paris
                      postcode: '75004'
                      country: France
                      '@type': GeographicAddress
                    '@type': RelatedPlaceRefOrValue
          relatedParty:
            - role: requester
              partyOrPartyRole:
                id: 45hj-999
                href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                name: Louise
                '@type': PartyRef
                '@referredType': Individual
              '@type': RelatedPartyOrPartyRole
          requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
          state: inProgress
          creationDate: '2021-08-31T15:51:12.570Z'
      description: A collection of QueryProductOfferingQualification representation
    RetrieveQPOQByListwithFieldsSelection_response:
      value:
        - id: '11'
          href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/11'
          state: done
          expirationDate: '2021-09-03T11:33:54.172Z'
          '@type': QueryProductOfferingQualification
        - id: '12'
          href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/12'
          state: done
          expirationDate: '2021-09-03T14:25:54.172Z'
          '@type': QueryProductOfferingQualification
        - id: '32'
          href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/32'
          state: done
          expirationDate: '2021-09-02T15:25:54.172Z'
          '@type': QueryProductOfferingQualification
        - id: '47'
          href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/47'
          state: done
          expirationDate: '2021-09-03T15:25:54.172Z'
          '@type': QueryProductOfferingQualification
      description: A collection of QueryProductOfferingQualification representation
    CreateCheckProductOfferingQualification_request:
      value:
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for a CheckProductOfferingQualification resource
        note:
          - '@type': Note
            author: Mr. N. Bene
            date: '2020-11-20T08:00:00Z'
            id: '1'
            text: Not for a CheckProductOfferingQualification
        checkProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            productOffering:
              id: DPI123
              name: International Data Plan - 20 GB
              '@type': ProductOfferingRef
            action: add
            id: '1'
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            productOffering:
              id: DPI123
              name: International Data Plan - 40 GB
              '@type': ProductOfferingRef
            action: add
            id: '2'
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            productOffering:
              id: DPI128
              name: France Voice Plan - 3 hours
              '@type': ProductOfferingRef
            action: add
            id: '3'
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-01T14:21:03.354Z'
      description: POST CheckProductOfferingQualification Request example
    CreateCheckProductOfferingQualification_response:
      value:
        href: 'https://host:port/ProductOfferingQualification/v5/CheckProductOfferingQualification/99'
        id: '99'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for a CheckProductOfferingQualification resource
        effectiveQualificationDate: '2021-09-01T14:21:03.352Z'
        expectedQualificationCompletionDate: '2021-09-01T14:21:03.352Z'
        expirationDate: '2021-09-01T14:21:03.352Z'
        note:
          - '@type': Note
            author: Mr. N. Bene
            date: '2020-11-20T08:00:00Z'
            id: '1'
            text: Not for a CheckProductOfferingQualification
        checkProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            productOffering:
              id: DPI123
              name: International Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            action: add
            id: '1'
            qualificationItemResult: green
            state: done
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            eligibilityResultReason:
              - '@type': EligibilityResultReason
                label: This offering is not anymore available but similar offer exists
                code: TE45A
            productOffering:
              id: DPI123
              name: International Data Plan - 40 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            alternateProductOfferingProposal:
              - '@type': AlternateProductOfferingProposal
                alternateActivationDate: '2021-09-01T14:21:03.353Z'
                alternateProductOffering:
                  id: DPI124
                  name: International Data Plan - 50 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                  '@type': ProductOfferingRef
                id: '1'
            action: add
            id: '2'
            qualificationItemResult: orange
            state: done
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-01T14:21:03.352Z'
            eligibilityResultReason:
              - '@type': EligibilityResultReason
                label: This offering is not anymore open to new customer
                code: TE45
            productOffering:
              id: DPI128
              name: France Voice Plan - 3 hours
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI128'
              '@type': ProductOfferingRef
            action: add
            id: '3'
            qualificationItemResult: red
            state: done
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-01T14:21:03.354Z'
        state: done
        creationDate: '2021-09-01T14:21:03.354Z'
      description: POST CheckProductOfferingQualification Response example.
    CreateQueryProductOfferingQualification_request:
      value:
        '@type': QueryProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        category:
          id: '24'
          name: International Data plan
          href: 'https://host:port/productCatalogManagement/v5/category/24'
          '@type': CategoryRef
        description: Example for a QueryProductOfferingQualification resource
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
      description: POST QueryProductOfferingQualification Request Example
    CreateQueryProductOfferingQualification_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/11'
        id: '11'
        '@type': QueryProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        category:
          id: '24'
          name: International Data plan
          href: 'https://host:port/productCatalogManagement/v5/category/24'
          '@type': CategoryRef
        description: Example for a QueryProductOfferingQualification resource
        effectiveQualificationDate: '2021-08-31T15:25:54.172Z'
        expectedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
        expirationDate: '2021-09-03T15:25:54.172Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI89
              name: European Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI89'
              '@type': ProductOfferingRef
            id: '1'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI90
              name: European Data Plan - 50 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI90'
              '@type': ProductOfferingRef
            id: '2'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI91
              name: European Data Plan - 100 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI91'
              '@type': ProductOfferingRef
            id: '3'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI123
              name: International Data Plan - 20 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
              '@type': ProductOfferingRef
            id: '4'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI124
              name: International Data Plan - 50 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
              '@type': ProductOfferingRef
            id: '5'
          - '@type': QueryProductOfferingQualificationItem
            productOffering:
              id: DPI125
              name: International Data Plan - 100 GB
              href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI125'
              '@type': ProductOfferingRef
            id: '6'
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-08-31T15:25:54.172Z'
        state: done
        creationDate: '2021-08-31T15:25:54.172Z'
      description: POST QueryProductOfferingQualification Response Description.
    CPOQ_partialupdate_example_application_json_request:
      value:
        '@type': CheckProductOfferingQualification
        status: acknoweldged
      description: >-
        Here's an example of a request for updating a CheckProductOfferingQualification resource -
        set status to acknoweldged. This example illustrates patch using application/json.
    CPOQ_partialupdate_example_application_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: FRA
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                    name: France
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: Response message
    CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json_request:
      value:
        '@type': CheckProductOfferingQualification
        status: acknoweldged
      description: >-
        Here's an example of a request for updating a CheckProductOfferingQualification resource -
        set status to acknoweldged. This example illustrates patch using
        application/merge-patch+json.
    CheckProductOfferingQualification_partialupdate_example_application_merge_patch_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: FRA
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                    name: France
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: Response message
    CheckProductOfferingQualification_partialupdate_example_application_json_patch_json_request:
      value:
        - op: replace
          path: /status
          value: acknoweldged
      description: >-
        Here's an example of a request for updating a CheckProductOfferingQualification resource -
        set status to acknoweldged. This example illustrates patch using
        application/json-patch+json.
    CheckProductOfferingQualification_partialupdate_example_application_json_patch_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: FRA
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                    name: France
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: Response message
    CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json_request:
      value:
        - op: add
          path: >-
            /CheckProductOfferingQualificationItem/product/place?CheckProductOfferingQualificationItem.id=1
          value:
            role: Coverage
            place:
              id: BEL
              href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
              name: Belgium
              '@referredType': GeographicLocation
              '@type': PlaceRef
            '@type': RelatedPlaceRefOrValue
      description: >-
        Here's an example of a request for updating a CheckProductOfferingQualification resource -
        adding a place in the first CheckProductOfferingQualificationItem. This example illustrates
        patch using application/json-patch-query+json.
    CheckProductOfferingQualification_partialupdate_example_application_json_patch_query_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: FRA
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                    name: France
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: Response message
    QueryProductOfferingQualification_partialupdate_example_application_json_request:
      value:
        '@type': QueryProductOfferingQualification
        status: inProgress
      description: >-
        Here's an example of a request for updating a QueryProductOfferingQualification resource -
        set status to inProgress. This example illustrates patch using application/json.
    QueryProductOfferingQualification_partialupdate_example_application_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
        id: '14'
        '@type': QueryProductOfferingQualification
        description: Example for an inProgress QueryProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            product:
              id: '1'
              '@type': Product
              productSpecification:
                id: dfg-56d
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/dfg-56d'
                version: v2
                name: UNI specification
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: UNI_Characteristic
                  name: UNI order configuration
                  valueType: UNISpec JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..UNISpec.json'
                    '@type': UNIJsonSpecification
                    physicalLayer: 100BASE-T
                    synchronousModeEnabled: true
                    numberOfLinks: 1
                    tokenShareEnabled: true
                    uniResiliency: NONE
                    maxServiceFrameSize: 1256
              place:
                - role: INSTALL_LOCATION
                  place:
                    streetType: rue
                    streetName: Pellisier
                    streetNr: '14'
                    city: Paris
                    postcode: '75004'
                    country: France
                    '@type': GeographicAddress
                  '@type': RelatedPlaceRefOrValue
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        state: inProgress
        creationDate: '2021-08-31T15:51:12.570Z'
      description: Response message
    QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json_request:
      value:
        '@type': QueryProductOfferingQualification
        status: inProgress
      description: >-
        Here's an example of a request for updating a QueryProductOfferingQualification resource -
        set status to inProgress. This example illustrates patch using application/merge-patch+json.
    QueryProductOfferingQualification_partialupdate_example_application_merge_patch_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
        id: '14'
        '@type': QueryProductOfferingQualification
        description: Example for an inProgress QueryProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            product:
              id: '1'
              '@type': Product
              productSpecification:
                id: dfg-56d
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/dfg-56d'
                version: v2
                name: UNI specification
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: UNI_Characteristic
                  name: UNI order configuration
                  valueType: UNISpec JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..UNISpec.json'
                    '@type': UNIJsonSpecification
                    physicalLayer: 100BASE-T
                    synchronousModeEnabled: true
                    numberOfLinks: 1
                    tokenShareEnabled: true
                    uniResiliency: NONE
                    maxServiceFrameSize: 1256
              place:
                - role: INSTALL_LOCATION
                  place:
                    streetType: rue
                    streetName: Pellisier
                    streetNr: '14'
                    city: Paris
                    postcode: '75004'
                    country: France
                    '@type': GeographicAddress
                  '@type': RelatedPlaceRefOrValue
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        state: inProgress
        creationDate: '2021-08-31T15:51:12.570Z'
      description: Response message
    QueryProductOfferingQualification_partialupdate_example_application_json_patch_json_request:
      value:
        - op: replace
          path: /status
          value: inProgress
      description: >-
        Here's an example of a request for updating a QueryProductOfferingQualification resource -
        set status to inProgress. This example illustrates patch using application/json-patch+json.
    QueryProductOfferingQualification_partialupdate_example_application_json_patch_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
        id: '14'
        '@type': QueryProductOfferingQualification
        description: Example for an inProgress QueryProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        qualifiedProductOfferingItem:
          - '@type': QueryProductOfferingQualificationItem
            product:
              id: '1'
              '@type': Product
              productSpecification:
                id: dfg-56d
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/dfg-56d'
                version: v2
                name: UNI specification
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: UNI_Characteristic
                  name: UNI order configuration
                  valueType: UNISpec JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..UNISpec.json'
                    '@type': UNIJsonSpecification
                    physicalLayer: 100BASE-T
                    synchronousModeEnabled: true
                    numberOfLinks: 1
                    tokenShareEnabled: true
                    uniResiliency: NONE
                    maxServiceFrameSize: 1256
              place:
                - role: INSTALL_LOCATION
                  place:
                    streetType: rue
                    streetName: Pellisier
                    streetNr: '14'
                    city: Paris
                    postcode: '75004'
                    country: France
                    '@type': GeographicAddress
                  '@type': RelatedPlaceRefOrValue
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        state: inProgress
        creationDate: '2021-08-31T15:51:12.570Z'
      description: Response message
    QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json_request:
      value:
        - op: replace
          path: >-
            /qualifiedProductOfferingItem/productCharacteristic/value/physicalLayer?qualifiedProductOfferingItem.id=1
          value: 100BASE-T
        - op: replace
          path: /place/postcode?role=INSTALL_LOCATION
          value: '75005'
      description: >-
        Here's an example of a request for updating a QueryProductOfferingQualification resource -
        change place post code and product characteristic. This example illustrates patch using
        application/json-patch-query+json.
    QueryProductOfferingQualification_partialupdate_example_application_json_patch_query_json_response:
      value:
        href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/101'
        id: '101'
        '@type': CheckProductOfferingQualification
        channel:
          id: '1'
          name: Web
          '@type': ChannelRef
        description: Example for an acknowledged CheckProductOfferingQualification resource
        expectedQualificationCompletionDate: '2021-09-05T07:11:53.167Z'
        CheckProductOfferingQualificationItem:
          - '@type': CheckProductOfferingQualificationItem
            expectedActivationDate: '2021-09-02T07:11:53.167Z'
            product:
              '@type': Product
              productSpecification:
                id: '77'
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/77'
                name: NEST for enhanced MobileBroadband with IMS support
              productCharacteristic:
                - '@type': ObjectCharacteristic
                  id: Slice5G_Characteristic
                  name: Slice 5G POQ configuration
                  valueType: Slice5G JSON descriptor
                  value:
                    '@valueSchemaLocation': 'https://github.com/..5GPOQ.json'
                    '@type': 5GSliceJsonSpecification
                    availability: 99.999
                    MMTel_Support: 1
                    Session _Service_Continuity_support: 1
                    Slice_Quality_Of_Service:
                      - 1
                      - 2
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
              place:
                - role: Coverage
                  place:
                    id: FRA
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/FRA'
                    name: France
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
                - role: Coverage
                  place:
                    id: BEL
                    href: 'https://host:port/geographicLocationManagement/v5/geographicLocation/BEL'
                    name: Belgium
                    '@referredType': GeographicLocation
                    '@type': PlaceRef
                  '@type': RelatedPlaceRefOrValue
            action: add
            id: '1'
            state: acknowledged
        provideAlternative: true
        provideResultReason: true
        relatedParty:
          - role: requester
            partyOrPartyRole:
              id: 45hj-999
              href: 'https://host:port/partyManagement/v5/individual/45hj-999'
              name: Louise
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyOrPartyRole
        requestedQualificationCompletionDate: '2021-09-02T07:11:53.168Z'
        state: acknowledged
        creationDate: '2021-09-02T07:11:53.168Z'
      description: Response message
    CheckProductOfferingQualificationCreateEvent_request:
      value:
        correlationId: 126-54f
        description: CheckProductOfferingQualificationCreateEvent illustration
        domain: Commercial
        eventId: '125'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: CheckProductOfferingQualificationCreateEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: CheckProductOfferingQualificationCreateEvent
        event:
          checkProductOfferingQualification:
            href: 'https://host:port/ProductOfferingQualification/v5/CheckProductOfferingQualification/99'
            id: '99'
            '@type': CheckProductOfferingQualification
            channel:
              id: '1'
              name: Web
              '@type': ChannelRef
            description: Example for a CheckProductOfferingQualification resource
            effectiveQualificationDate: '2021-09-01T14:21:03.352Z'
            expectedQualificationCompletionDate: '2021-09-01T14:21:03.352Z'
            expirationDate: '2021-09-01T14:21:03.352Z'
            note:
              - '@type': Note
                author: Mr. N. Bene
                date: '2020-11-20T08:00:00Z'
                id: '1'
                text: Not for a CheckProductOfferingQualification
            checkProductOfferingQualificationItem:
              - '@type': CheckProductOfferingQualificationItem
                expectedActivationDate: '2021-09-01T14:21:03.352Z'
                productOffering:
                  id: DPI123
                  name: International Data Plan - 20 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                  '@type': ProductOfferingRef
                action: add
                id: '1'
                qualificationItemResult: green
                state: done
              - '@type': CheckProductOfferingQualificationItem
                expectedActivationDate: '2021-09-01T14:21:03.352Z'
                eligibilityResultReason:
                  - '@type': EligibilityResultReason
                    label: This offering is not anymore available but similar offer exists
                    code: TE45A
                productOffering:
                  id: DPI123
                  name: International Data Plan - 40 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                  '@type': ProductOfferingRef
                alternateProductOfferingProposal:
                  - '@type': AlternateProductOfferingProposal
                    alternateActivationDate: '2021-09-01T14:21:03.353Z'
                    alternateProductOffering:
                      id: DPI124
                      name: International Data Plan - 50 GB
                      href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                      '@type': ProductOfferingRef
                    id: '1'
                action: add
                id: '2'
                qualificationItemResult: orange
                state: done
              - '@type': CheckProductOfferingQualificationItem
                expectedActivationDate: '2021-09-01T14:21:03.352Z'
                eligibilityResultReason:
                  - '@type': EligibilityResultReason
                    label: This offering is not anymore open to new customer
                    code: TE45
                productOffering:
                  id: DPI128
                  name: France Voice Plan - 3 hours
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI128'
                  '@type': ProductOfferingRef
                action: add
                id: '3'
                qualificationItemResult: red
                state: done
            provideAlternative: true
            provideResultReason: true
            relatedParty:
              - role: requester
                partyOrPartyRole:
                  id: 45hj-999
                  href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                  name: Louise
                  '@type': PartyRef
                  '@referredType': Individual
                '@type': RelatedPartyOrPartyRole
            requestedQualificationCompletionDate: '2021-09-01T14:21:03.354Z'
            state: done
            creationDate: '2021-09-01T14:21:03.354Z'
          relatedParty:
            - role: Issuer
              partyOrPartyRole:
                id: 56d
                href: 'https://host:port/partyManagement/v5/organization/56d'
                '@type': PartyRef
                '@referredType': Organization
              '@type': RelatedPartyOrPartyRole
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckProductOfferingQualificationCreateEvent
      description: Message example for CheckProductOfferingQualificationCreateEvent event
    CheckProductOfferingQualificationStateChangeEvent_request:
      value:
        correlationId: qsd-ff
        description: CheckProductOfferingQualificationStateChangeEvent illustration
        domain: Commercial
        eventId: '698'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: CheckProductOfferingQualificationStateChangeEvent
        priority: '2'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: CheckProductOfferingQualificationStateChangeEvent
        event:
          checkProductOfferingQualification:
            href: 'https://host:port/ProductOfferingQualification/v5/CheckProductOfferingQualification/99'
            id: '99'
            '@type': CheckProductOfferingQualification
            state: done
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckProductOfferingQualificationStateChangeEvent
      description: Message example for CheckProductOfferingQualificationStateChangeEvent event
    CheckProductOfferingQualificationAttributeValueChangeEvent_request:
      value:
        correlationId: azer-55
        description: CheckProductOfferingQualificationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: '467'
        eventTime: '2022-09-14T12:14:28.774Z'
        eventType: CheckProductOfferingQualificationAttributeValueChangeEvent
        priority: '3'
        timeOcurred: '2022-09-14T12:14:23.473Z'
        title: CheckProductOfferingQualificationAttributeValueChangeEvent
        event:
          checkProductOfferingQualification:
            href: 'https://host:port/ProductOfferingQualification/v5/CheckProductOfferingQualification/99'
            id: '99'
            '@type': CheckProductOfferingQualification
            note:
              - '@type': Note
                author: Mr. N. Bene
                date: '2020-11-20T08:00:00Z'
                id: '1'
                text: Not for a CheckProductOfferingQualification
        reportingSystem:
          id: '533'
          name: APP-963
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '200'
          name: APP-893
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckProductOfferingQualificationAttributeValueChangeEvent
      description: Message example for CheckProductOfferingQualificationAttributeValueChangeEvent event
    CheckProductOfferingQualificationDeleteEvent_request:
      value:
        correlationId: fg-56h
        description: CheckProductOfferingQualificationDeleteEvent illustration
        domain: Commercial
        eventId: '753'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: CheckProductOfferingQualificationDeleteEvent
        priority: '3'
        timeOcurred: '2021-09-30T07:43:59.059Z'
        title: CheckProductOfferingQualificationDeleteEvent
        event:
          CheckProductOfferingQualification:
            href: 'https://host:port/productOfferingQualification/v5/CheckProductOfferingQualification/14'
            id: '14'
            '@type': CheckProductOfferingQualification
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckProductOfferingQualificationDeleteEvent
      description: Message example for CheckProductOfferingQualificationDeleteEvent event
    QueryProductOfferingQualificationCreateEvent_request:
      value:
        correlationId: dft-652
        description: QueryProductOfferingQualificationCreateEvent illustration
        domain: Commercial
        eventId: '256'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QueryProductOfferingQualificationCreateEvent
        priority: '1'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: QueryProductOfferingQualificationCreateEvent
        event:
          queryProductOfferingQualification:
            href: 'https://host:port/ProductOfferingQualificatio/v5/QueryProductOfferingQualification/11'
            id: '11'
            '@type': QueryProductOfferingQualification
            channel:
              id: '1'
              name: Web
              '@type': ChannelRef
            category:
              id: '24'
              name: International Data plan
              href: 'https://host:port/productCatalogManagement/v5/category/24'
              '@type': CategoryRef
            description: Example for a QueryProductOfferingQualification resource
            qualifiedProductOfferingItem:
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI89
                  name: European Data Plan - 20 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI89'
                  '@type': ProductOfferingRef
                id: '1'
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI90
                  name: European Data Plan - 50 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI90'
                  '@type': ProductOfferingRef
                id: '2'
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI91
                  name: European Data Plan - 100 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI91'
                  '@type': ProductOfferingRef
                id: '3'
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI123
                  name: International Data Plan - 20 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI123'
                  '@type': ProductOfferingRef
                id: '4'
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI124
                  name: International Data Plan - 50 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI124'
                  '@type': ProductOfferingRef
                id: '5'
              - '@type': QueryProductOfferingQualificationItem
                productOffering:
                  id: DPI125
                  name: International Data Plan - 100 GB
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/DPI125'
                  '@type': ProductOfferingRef
                id: '6'
            relatedParty:
              - role: requester
                partyOrPartyRole:
                  id: 45hj-999
                  href: 'https://host:port/partyManagement/v5/individual/45hj-999'
                  name: Louise
                  '@type': PartyRef
                  '@referredType': Individual
                '@type': RelatedPartyOrPartyRole
            state: acknowledged
            creationDate: '2021-08-31T15:25:54.172Z'
          relatedParty:
            - role: Issuer
              partyOrPartyRole:
                id: 56d
                href: 'https://host:port/partyManagement/v5/organization/56d'
                '@type': PartyRef
                '@referredType': Organization
              '@type': RelatedPartyOrPartyRole
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryProductOfferingQualificationCreateEvent
      description: Message example for QueryProductOfferingQualificationCreateEvent event
    QueryProductOfferingQualificationAttributeValueChangeEvent_request:
      value:
        correlationId: azer-55
        description: QueryProductOfferingQualificationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: '467'
        eventTime: '2022-09-14T12:14:28.774Z'
        eventType: ProductAttributeValueChangeEvent
        priority: '3'
        timeOcurred: '2022-09-14T12:14:23.473Z'
        title: QueryProductOfferingQualificationAttributeValueChangeEvent
        event:
          queryProductOfferingQualification:
            href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
            id: '14'
            '@type': QueryProductOfferingQualification
            requestedQualificationCompletionDate: '2021-09-06T15:51:12.570Z'
        reportingSystem:
          id: '533'
          name: APP-963
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '200'
          name: APP-893
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryProductOfferingQualificationAttributeValueChangeEvent
      description: Message example for QueryProductOfferingQualificationAttributeValueChangeEvent event
    QueryProductOfferingQualificationStateChangeEvent_request:
      value:
        correlationId: qsd-ff
        description: QueryProductOfferingQualificationStateChangeEvent illustration
        domain: Commercial
        eventId: '698'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QueryProductOfferingQualificationStateChangeEvent
        priority: '2'
        timeOcurred: '2021-09-27T07:43:59.059Z'
        title: QueryProductOfferingQualificationStateChangeEvent
        event:
          queryProductOfferingQualification:
            href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/11'
            id: '11'
            '@type': QueryProductOfferingQualification
            state: done
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryProductOfferingQualificationStateChangeEvent
      description: Message example for QueryProductOfferingQualificationStateChangeEvent event
    QueryProductOfferingQualificationDeleteEvent_request:
      value:
        correlationId: fg-56h
        description: QueryProductOfferingQualificationDeleteEvent illustration
        domain: Commercial
        eventId: '753'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QueryProductOfferingQualificationDeleteEvent
        priority: '3'
        timeOcurred: '2021-09-30T07:43:59.059Z'
        title: QueryProductOfferingQualificationDeleteEvent
        event:
          queryProductOfferingQualification:
            href: 'https://host:port/productOfferingQualification/v5/QueryProductOfferingQualification/14'
            id: '14'
            '@type': QueryProductOfferingQualification
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryProductOfferingQualificationDeleteEvent
      description: Message example for QueryProductOfferingQualificationDeleteEvent event
